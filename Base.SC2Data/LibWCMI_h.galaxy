include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Mission (WoL)
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libWCMI_ge_MissionCheatUIType_None = 0;
const int libWCMI_ge_MissionCheatUIType_Button = 1;
const int libWCMI_ge_MissionCheatUIType_ButtonEditBoxCombo = 2;
const int libWCMI_ge_MissionCheatType_None = 0;
const int libWCMI_ge_MissionCheatType_Stage = 1;
const int libWCMI_ge_MissionCheatType_Mechanic = 2;
const int libWCMI_ge_MissionCheatType_User01 = 3;
const int libWCMI_ge_MissionCheatType_User02 = 4;
const int libWCMI_ge_CampaignMissionGameResultType_None = 0;
const int libWCMI_ge_CampaignMissionGameResultType_Victory = 1;
const int libWCMI_ge_CampaignMissionGameResultType_Defeat = 2;
const int libWCMI_ge_MissionTransmissionPortraitOptioins_LeavePortraitVisibleAfter = 0;
const int libWCMI_ge_MissionTransmissionPortraitOptioins_HidePortraitAfter = 1;
const int libWCMI_ge_MissionTransmissionPortraitOptioins_DontShowPortrait = 2;
const int libWCMI_ge_MissionTransmissionCueSoundOptions_DefaultCueSoundBehavior = 0;
const int libWCMI_ge_MissionTransmissionCueSoundOptions_PlayCueSound = 1;
const int libWCMI_ge_MissionTransmissionCueSoundOptions_DontPlayCueSound = 2;
const int libWCMI_ge_MissionTransmissionOptions_ChatBubble = 0;
const int libWCMI_ge_DropPodRace_Terran = 0;
const int libWCMI_ge_DropPodRace_Zerg = 1;
const int libWCMI_ge_BurrowUnburrowOption_Burrow = 0;
const int libWCMI_ge_BurrowUnburrowOption_Unburrow = 1;
const int libWCMI_ge_CacheResourceType_CustomResource = 0;
const int libWCMI_ge_CacheResourceType_Mineral = 1;
const int libWCMI_ge_CacheResourceType_Vespene = 2;
const int libWCMI_ge_CacheResourceType_Mutagen = 3;
const int libWCMI_ge_CacheResourceType_Influence = 4;
const int libWCMI_ge_CacheResourceType_Solarite = 5;
const int libWCMI_ge_ObjectiveMessageType_ObjectiveDiscovered = 0;
const int libWCMI_ge_ObjectiveMessageType_ObjectiveUpdate = 1;
const int libWCMI_ge_ObjectiveMessageType_ObjectiveCompleted = 2;
const int libWCMI_ge_ObjectiveMessageType_ObjectiveFailed = 3;
const int libWCMI_ge_CampaignMessageType_MissionFailed = 0;
const int libWCMI_ge_CampaignMessageType_Hint = 1;
const int libWCMI_ge_CampaignMessageType_SimpleHint = 2;
const int libWCMI_ge_CampaignMessageType_Secret = 3;
const int libWCMI_ge_CampaignMessageType_Warning = 4;
const int libWCMI_ge_CampaignMessageType_NewUnitAcquired = 5;
const int libWCMI_ge_CampaignMessageType_NewUnitAvailable = 6;
const int libWCMI_ge_CampaignMessageType_NewTechAvailable = 7;
const int libWCMI_ge_CampaignMessageType_NewUnitAvailable2 = 8;
const int libWCMI_ge_CampaignMessageFormatNotFormat_FormatMessage = 0;
const int libWCMI_ge_CampaignMessageFormatNotFormat_NotFormatMessage = 1;
const int libWCMI_ge_CampaginReticleType_ZergMainObjective = 0;
const int libWCMI_ge_CampaginReticleType_ZergBonusObjective = 1;
const int libWCMI_ge_CampaginReticleType_ZergEnemy = 2;
const int libWCMI_ge_CampaginReticleType_TerranMainObjective = 3;
const int libWCMI_ge_CampaginReticleType_TerranBonusObjective = 4;
const int libWCMI_ge_CampaginReticleType_TerranEnemy = 5;
const int libWCMI_ge_CampaginReticleType_ProtossMainObjective = 6;
const int libWCMI_ge_CampaginReticleType_ProtossBonusObjective = 7;
const int libWCMI_ge_CampaginReticleType_ProtossEnemy = 8;
const int libWCMI_ge_CampaginReticleSize_Large = 0;
const int libWCMI_ge_CampaginReticleSize_Medium = 1;
const int libWCMI_ge_CampaginReticleSize_Small = 2;

// Constants
const string libWCMI_gv_pMC_SoundDataTableIdentifier = "WM_SoundDataTable_";
const int libWCMI_gv_pMC_MissionCheat_PanelCountMAX = 4;
const int libWCMI_gv_pMC_MissionCheat_MaxCheats = 13;
const fixed libWCMI_gv_campaignObjectiveDelay = 2.0;
const fixed libWCMI_gv_campaignHintDelay = 2.0;
const fixed libWCMI_gv_campaignSecretDelay = 5.0;
const fixed libWCMI_gv_campaignAchievementDelay = 2.0;
const int libWCMI_gv_wMC_DamageStat_UnitTypeCount = 25;

// Structures
struct libWCMI_gs_MissionCheat {
    string lv_titleString;
    text lv_titleText;
    text lv_description;
    int lv_buttonDialog;
    int lv_editBoxDialog;
    int lv_uIType;
    int lv_cheatType;
    trigger lv_trigger;
};

struct libWCMI_gs_WM_DamageStat_Record {
    string lv_unitType;
    fixed lv_damage;
};

// Variable Declarations
int libWCMI_gv_wM_MissionAutoSaveIndex;
bool libWCMI_gv_wM_MissionAutoSaveDone;
int libWCMI_gv_wM_SoundDataTableIndex;
bool libWCMI_gv_wM_InCinematic;
int libWCMI_gv_wM_ScreenMode;
fixed libWCMI_gv_wM_CinematicModeSoAEnergy;
fixed libWCMI_gv_fenixChargeFacing;
fixed libWCMI_gv_fenixChargeEnergyCost;
fixed libWCMI_gv_kerriganPsiStrikeFacing;
fixed libWCMI_gv_kerriganPsiStrikeEnergyCost;
fixed libWCMI_gv_kerriganAstralShiftFacing;
fixed libWCMI_gv_kerriganAstralShiftEnergyCost;
bool libWCMI_gv_amonStrikeUnitSelected;
int libWCMI_gv_wM_GameCheat_DialogWidth;
int libWCMI_gv_wM_GameCheat_DialogHeight;
int libWCMI_gv_wM_GameCheat_Dialog;
int libWCMI_gv_wM_GameCheat_Minimize;
int libWCMI_gv_wM_GameCheat_OpenMissionCheat;
int libWCMI_gv_wM_GameCheat_ArrayIndex;
bool[26] libWCMI_gv_wM_GameCheat_CheatState;
int[26] libWCMI_gv_wM_GameCheat_CheckBox;
bool libWCMI_gv_wM_GameCheat_Minimized;
libWCMI_gs_MissionCheat[libWCMI_gv_pMC_MissionCheat_MaxCheats + 1] libWCMI_gv_wM_MissionCheat_Cheats;
int libWCMI_gv_wM_MissionCheat_Dialog;
int[libWCMI_gv_pMC_MissionCheat_PanelCountMAX + 1] libWCMI_gv_wM_MissionCheat_Panel;
int libWCMI_gv_wM_MissionCheat_CloseButton;
bool[libWCMI_gv_pMC_MissionCheat_PanelCountMAX + 1] libWCMI_gv_wM_MissionCheat_CategoryUsed;
int libWCMI_gv_wM_MissionCheat_ArrayCount;
bool libWCMI_gv_wM_MissionCheat_CloseButtonClicked;
bool libWCMI_gv_wM_MissionCheat_ArraySorted;
int[libWCMI_gv_pMC_MissionCheat_MaxCheats + 1] libWCMI_gv_wM_MissionCheat_ListPriority;
unit libWCMI_gv_wM_FlyoverUnit;
bool libWCMI_gv_wM_FlyoverModeEnabled;
int libWCMI_gv_wM_GameOverResult;
bool libWCMI_gv_wM_MissionEndStatsRecorded;
bool libWCMI_gv_wM_MissionVictoryActionQueyeEmpty;
int libWCMI_gv_wM_MissionCompleteTime;
int libWCMI_gv_wM_PlanetPortrait;
camerainfo libWCMI_gv_wM_PlanetPortraitPlayerCamera;
bool libWCMI_gv_wM_NeedPylonAbilityHighlightOn;
bool libWCMI_gv_wM_NeedPylonEnabled;
int libWCMI_gv_wM_NeedPylonFoodRequired;
int libWCMI_gv_wM_NeedPylonFoodRequired2Index;
int libWCMI_gv_wM_NeedPylonFoodRequired3Index;
int libWCMI_gv_wM_NeedPylonFoodRequired4Index;
int libWCMI_gv_wM_NeedPylonFoodRequired6Index;
timer libWCMI_gv_wM_CombatTimer;
text[21] libWCMI_gv_wM_MissionTipTitle;
text[21] libWCMI_gv_wM_MissionTipDescription;
string[21] libWCMI_gv_wM_MissionTipIcons;
int[21] libWCMI_gv_wM_MissionTipType;
int libWCMI_gv_wM_MissionTipCount;
int libWCMI_gv_wM_MissionHelpButton;
string[21] libWCMI_gv_wM_MissionTip;
int libWCMI_gv_wM_MissionHelpButtonTipPanel;
int libWCMI_gv_wM_SendTransmissionCampaignIndex;
int libWCMI_gv_wM_SendTransmissionCampaignPortrait;
unit libWCMI_gv_wM_SendTransmissionCampaignSpeaker;
trigger libWCMI_gv_wM_SendTransmissionCampaignTrigger;
int libWCMI_gv_wM_SendTransmissionCampaignPlayingTick;
bool libWCMI_gv_wM_SendTransmissionCampaignChatBubbleOn;
libWCMI_gs_WM_DamageStat_Record[libWCMI_gv_wMC_DamageStat_UnitTypeCount + 1] libWCMI_gv_wM_DamageStat_Total;
libWCMI_gs_WM_DamageStat_Record[libWCMI_gv_wMC_DamageStat_UnitTypeCount + 1] libWCMI_gv_wM_DamageStat_Encounter;
timer libWCMI_gv_wM_DamageStat_TimerEncounter;
timer libWCMI_gv_wM_DamageStat_TimerUI;
point libWCMI_gv_wM_DropPod_TP_Location;
unitgroup libWCMI_gv_wM_DropPod_TP_Units;
int libWCMI_gv_wM_DropPod_TP_Player;
unit libWCMI_gv_wM_DropPod_TP_ZergBuilding;
actor libWCMI_gv_wM_UpgradeReticle;
int libWCMI_gv_wM_UpgradeTextTag;
unit libWCMI_gv_wM_UpgradeUnit;

// Function Declarations
void libWCMI_gf_WM_MissionAutoSave (text lp_description);
void libWCMI_gf_CreateMissionAutosavePoint (text lp_description);
bool libWCMI_gf_PlayerInCinematicModeCampaign ();
string libWCMI_gf_WM_SoundDataTableName ();
void libWCMI_gf_PlaySoundCinematic (soundlink lp_soundLink, playergroup lp_players, fixed lp_volume, fixed lp_offset);
void libWCMI_gf_StopCinematicSounds ();
void libWCMI_gf_SetScreenModeCampaign (int lp_mode, fixed lp_duration);
void libWCMI_gf_CinematicModeCampaign (bool lp_onOff, fixed lp_duration, bool lp_waitOptions);
void libWCMI_gf_WM_CinematicModeNoWait (bool lp_onOff, fixed lp_duration);
void libWCMI_gf_WM_CinematicModeInternal (bool lp_onOff, fixed lp_duration);
void libWCMI_gf_ApplyCellularReactor (string lp_unit, int lp_player);
void libWCMI_gf_ApplyRegenerativeBioSteel (string lp_unit, int lp_player);
void libWCMI_gf_HandleMercCompound (unit lp_mercCompound);
void libWCMI_gf_WM_AddAlarakAvatarUpgrade (int lp_player);
void libWCMI_gf_WM_RemoveAlarakAvatarUpgrade (int lp_player);
point libWCMI_gf_AlarakKnockbackOffsetFindPoint (fixed lp_angle, point lp_startingPoint, fixed lp_distance);
void libWCMI_gf_WM_DetectionUpgradesApply ();
void libWCMI_gf_WM_MissionCheat_UpdateButtonEnabled ();
void libWCMI_gf_WM_MissionCheat_ButtonTextInit ();
void libWCMI_gf_AddMissionCheat (string lp_command, string lp_description, trigger lp_trigger, int lp_cheatType, int lp_uIType);
int libWCMI_gf_MissionCheatEditBoxValueInteger (trigger lp_cheatTrigger);
fixed libWCMI_gf_MissionCheatEditBoxValueReal (trigger lp_cheatTrigger);
string libWCMI_gf_MissionCheatEditBoxValueString (trigger lp_cheatTrigger);
void libWCMI_gf_GameOver (int lp_gameOverType);
bool libWCMI_gf_GameIsOver ();
void libWCMI_gf_WM_PostMissionVictoryUpdate ();
void libWCMI_gf_WM_MissionEndStats (int lp_type);
void libWCMI_gf_RunMissionVictorySequence (trigger lp_victoryCinematic);
void libWCMI_gf_EndCampaignMission (int lp_player, int lp_type);
void libWCMI_gf_PU_CampaignVictory2 ();
void libWCMI_gf_PreparePlanetPortraitZoomIn (string lp_model, camerainfo lp_camera, string lp_light);
void libWCMI_gf_ZoomInPlanetPortrait ();
void libWCMI_gf_HidePlanetPortrait ();
void libWCMI_gf_StartAIPersonalityForPlayerCampaign (int lp_player, string lp_personality);
void libWCMI_gf_StartAIPersonalitiesForAllPlayersCampaign ();
void libWCMI_gf_StartCampaignAIForAllPlayersVoid ();
void libWCMI_gf_StartCampaignAIForPlayerVoid (int lp_player);
void libWCMI_gf_EnableVoidCampaignAIBehaviorForAllPlayers ();
void libWCMI_gf_EnableVoidCampaignAIBehaviorForPlayer (int lp_player);
void libWCMI_gf_EnableDisableNeedPylonInfo (bool lp_enableDisable);
bool libWCMI_gf_NeedPylonHighlightOn ();
int libWCMI_gf_CampaignPlayerColor ();
bool libWCMI_gf_PlayerIsInCombat (int lp_player);
void libWCMI_gf_SetPlayerMinimapColor (int lp_player, int lp_color);
void libWCMI_gf_UpdateObjectiveCampaign (string lp_objective);
void libWCMI_gf_SetMissionObjectiveProgress (string lp_objective, int lp_current);
void libWCMI_gf_SetMissionObjectiveProgress2 (string lp_objective, text lp_special);
void libWCMI_gf_CreateObjectiveCampaign (string lp_objectiveData);
void libWCMI_gf_HideObjectiveCampaign (string lp_objectiveData);
void libWCMI_gf_ZS_SetMissionObjectiveState (string lp_objective, int lp_state);
void libWCMI_gf_AddMissionTipCampaign (string lp_tipData);
void libWCMI_gf_DisplayMissionTip ();
void libWCMI_gf_WM_RefreshTip ();
void libWCMI_gf_SendTransmissionCampaign (unit lp_unit, string lp_conversationLine, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption);
void libWCMI_gf_TurnTransmissionOptionsOnOffCampaign (int lp_option, bool lp_onOff);
void libWCMI_gf_WM_SendTransmissionCampaignInternal (bool lp_isPlaceHolder, unit lp_unit, string lp_model, soundlink lp_sound, text lp_speaker, text lp_message, int lp_durationType, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption, string lp_portraitActor);
void libWCMI_gf_WM_SendTransmissionCampaignCleanUp (int lp_transmission, int lp_keepPortraitVisible, int lp_portrait, actor lp_talkIcon, actor lp_talkRing, int lp_ping, int lp_localIndex);
void libWCMI_gf_HideCampaignTransmissionPortrait ();
fixed libWCMI_gf_ConvesationLineDuration (string lp_conversationLine);
void libWCMI_gf_SendTransmissionCampaignPlaceHolder (unit lp_unit, string lp_model, text lp_speaker, text lp_message, fixed lp_duration, bool lp_waitUntilDone, int lp_keepPortraitVisible, int lp_cueSoundOption);
void libWCMI_gf_WM_DamageStat_SortEncounter ();
bool libWCMI_gf_WM_DamageStat_ShouldDisplayEncounter ();
string libWCMI_gf_WM_DamageStat_LeaderAlias (string lp_unitType);
fixed libWCMI_gf_TotalDamageDealtbyUnitType (string lp_unit);
fixed libWCMI_gf_TotalDamageDealt ();
string libWCMI_gf_MostDamageDealtUnitType ();
void libWCMI_gf_WM_DropPod_Zerg_Wait (point lp_location, unitgroup lp_units, int lp_player);
void libWCMI_gf_WM_DropPod_Terran_Wait (point lp_location, unitgroup lp_units, int lp_player);
void libWCMI_gf_CreateDropPod (int lp_race, point lp_location, unitgroup lp_units, bool lp_waitDontWait, int lp_player);
void libWCMI_gf_CreateDropPodForZergBuilding (string lp_buildingType, point lp_landingPoint, int lp_player, bool lp_waitDontWait);
void libWCMI_gf_WM_DropPodCreateZergBuilding_DontWait (string lp_buildingType, point lp_landingPoint, int lp_player);
void libWCMI_gf_WM_DropPodCreateZergBuilding_Wait (string lp_buildingType, point lp_landingPoint, int lp_player);
string libWCMI_gf_WM_DropPod_LastDroppedUnitsDataTableName ();
unitgroup libWCMI_gf_LastDroppedUnits ();
unit libWCMI_gf_WM_NexusBestWorkerRallyMineral (unit lp_nexus);
void libWCMI_gf_SetWorkerRallyPointforNexus (unit lp_nexus);
void libWCMI_gf_SetWorkerRallyPointforNexus2 (unit lp_nexus);
void libWCMI_gf_SetWorkerRallyPointsPlayersNexuses (int lp_player);
void libWCMI_gf_WM_UseUnitNameAsUnitTip (unit lp_unit);
void libWCMI_gf_SetUnitInfoTextCampaign (unit lp_unit, text lp_info, text lp_tip, text lp_subTip);
void libWCMI_gf_SetUnitInfoTextCampaignDetailed (unit lp_unit, text lp_info, text lp_tip, text lp_subTip);
void libWCMI_gf_SpawnLarvaForHatchery (unit lp_hatchery, int lp_larvaCount);
void libWCMI_gf_BurrowUnburrowZergUnitGroup (unitgroup lp_unitGroup, int lp_burrowUnburrow);
void libWCMI_gf_SendActorMessageToDoodadsInRegion (string lp_message, string lp_doodadType, region lp_target);
void libWCMI_gf_DestroyCacheAndGivePlayerResources (unit lp_cacheUnit, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libWCMI_gf_GivePlayerResources (point lp_location, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libWCMI_gf_DisplayRewardFloatingText (point lp_location, int lp_resourceType, int lp_resourceAmount, string lp_resourceIcon, text lp_resourceText, int lp_player);
void libWCMI_gf_DisplayMissionObjectiveRewardFloatingText (point lp_location, string lp_objective);
bool libWCMI_gf_WM_StartingWorkerAutoHarvestEnabled ();
void libWCMI_gf_StartingWorkersAutoHarvest (region lp_regionMineralWorker, region lp_regionGasWorker);
text libWCMI_gf_UnitAbilityHotkeyText (string lp_unitType, string lp_abilityButton);
void libWCMI_gf_DisplayCampaignMessage (playergroup lp_toPlayerGroup, int lp_messageType, text lp_message, int lp_formatOrNot);
void libWCMI_gf_CreateObjectivePing (bool lp_objectiveType, point lp_position, text lp_tooltip);
void libWCMI_gf_PingMinimapCampaign (playergroup lp_players, point lp_pos, fixed lp_dur, color lp_color);
string libWCMI_gf_WM_ReticleModelOfStyle (int lp_type, int lp_size);
string libWCMI_gf_WM_ReticleTextFontOfStyle (int lp_type);
void libWCMI_gf_WM_ReticleApplyTint (actor lp_reticle, int lp_type);
void libWCMI_gf_CreateReticleEffectAndTextTagAtPoint (int lp_type, int lp_size, text lp_text, point lp_location);
void libWCMI_gf_AttachReticleEffectAndTextTagOnUnit (int lp_type, int lp_size, text lp_text, unit lp_target, string lp_attachPoint);
text libWCMI_gf_FormatTextWithReplacement (text lp_text, text lp_replacement1, text lp_replacement2, text lp_replacement3, text lp_replacement4);
void libWCMI_gf_WM_VoidCampaignMissionInit ();
void libWCMI_gf_DifficultySetting (int lp_difficulty);

// Trigger Declarations
trigger libWCMI_gt_WM_CinematicModeOn;
trigger libWCMI_gt_WM_CinematicModeOff;
trigger libWCMI_gt_DiamondbackAttack;
trigger libWCMI_gt_DiamondbackAttackScan;
trigger libWCMI_gt_DiamondbackAttackStop;
trigger libWCMI_gt_DiamondbackAttackChaseInterrupted;
trigger libWCMI_gt_BattlecruiserAttack;
trigger libWCMI_gt_BattlecruiserAttackScan;
trigger libWCMI_gt_BattlecruiserAttackStop;
trigger libWCMI_gt_BattlecruiserAttackAbilityUsed;
trigger libWCMI_gt_BattlecruiserAttackChaseInterrupted;
trigger libWCMI_gt_UltraCapacitors;
trigger libWCMI_gt_VanadiumPlating;
trigger libWCMI_gt_CellularReactor;
trigger libWCMI_gt_RegenerativeBioSteel;
trigger libWCMI_gt_AdvancedConstructionRefineryHack;
trigger libWCMI_gt_AdvancedConstructionAuto;
trigger libWCMI_gt_GlobalUpgrade;
trigger libWCMI_gt_WM_HandleUseDeepShadows;
trigger libWCMI_gt_WM_HandleUseAlarakAvatar;
trigger libWCMI_gt_WM_HandleAlarakAvatarFinal;
trigger libWCMI_gt_AlarakKnockback4;
trigger libWCMI_gt_AlarakKnockback5;
trigger libWCMI_gt_AlarakKnockback6;
trigger libWCMI_gt_AlarakKnockback7;
trigger libWCMI_gt_AlarakKnockback8;
trigger libWCMI_gt_AlarakKnockback9;
trigger libWCMI_gt_AlarakKnockback10;
trigger libWCMI_gt_AlarakKnockback11;
trigger libWCMI_gt_AlarakKnockback12;
trigger libWCMI_gt_FenixCharge;
trigger libWCMI_gt_KerriganPsiStrike;
trigger libWCMI_gt_KerriganAstralShift;
trigger libWCMI_gt_Extinction;
trigger libWCMI_gt_StrikeAmon;
trigger libWCMI_gt_AmonStrikeSelectionCheck;
trigger libWCMI_gt_OracleWormhole;
trigger libWCMI_gt_WM_GameCheat_CreateDialog;
trigger libWCMI_gt_PS_GameCheat_CheckboxUsed;
trigger libWCMI_gt_PS_GameCheat_CheatUsed;
trigger libWCMI_gt_WM_MissionCheat_CreateDialog;
trigger libWCMI_gt_WM_MissionCheat_ButtonClicked;
trigger libWCMI_gt_WM_MissionCheat_CheatEntered;
trigger libWCMI_gt_WM_DebugVictoryS;
trigger libWCMI_gt_WM_ToggleFlyoverMode;
trigger libWCMI_gt_WM_TurnOffFlyoverMode;
trigger libWCMI_gt_WM_MissionVictoryCallbackBlockActionQueueOneMinute;
trigger libWCMI_gt_WM_MissionVictoryCallbackBlockActionQueue;
trigger libWCMI_gt_WM_AbortMission;
trigger libWCMI_gt_WM_MissionEndsPlayerExit;
trigger libWCMI_gt_WM_VictoryContinue;
trigger libWCMI_gt_WM_VictoryQuit;
trigger libWCMI_gt_WM_PlayerNeedPylon;
trigger libWCMI_gt_WM_PlayerNeedPylonButtonClickedFood2;
trigger libWCMI_gt_WM_PlayerNeedPylonButtonClickedFood3;
trigger libWCMI_gt_WM_PlayerNeedPylonButtonClickedFood4;
trigger libWCMI_gt_WM_PlayerNeedPylonButtonClickedFood6;
trigger libWCMI_gt_WM_MissionTipClicked;
trigger libWCMI_gt_WM_SendTransmissionCampaignTick;
trigger libWCMI_gt_WM_DamageStat_UnitTakesDamage;
trigger libWCMI_gt_WM_DamageStat_EncounterTimerExpires;
trigger libWCMI_gt_WM_DamageStat_UITimerExpires;
trigger libWCMI_gt_WM_DamageStat_EncounterSortPeriodic;
trigger libWCMI_gt_WM_DropPod_Zerg_DontWait;
trigger libWCMI_gt_WM_DropPod_Terran_DontWait;
trigger libWCMI_gt_WM_CampaignUnit;
trigger libWCMI_gt_WM_CampaignUnitCreated;
trigger libWCMI_gt_WM_CampaignUnitChangeOwner;
trigger libWCMI_gt_WM_CampaignUnitInfoUnitMorphes;
trigger libWCMI_gt_WM_UnitBeingRemoved;
trigger libWCMI_gt_VoidPingSound;

// Library Initialization
void libWCMI_InitVariables ();

